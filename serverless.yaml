service: BGCWebScraper

frameworkVersion: "3"

plugins:
  - serverless-esbuild

custom:
  tableName: "ProductsTable-Dev4-${sls:stage}"
  esbuild:
    bundle: true
    minify: false

provider:
  name: aws
  region: us-east-2
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Query"    
            - "dynamodb:Scan"
            - "dynamodb:GetItem"
            - "dynamodb:PutItem" 
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:DescribeTable"
            - "dynamodb:CreateTable"
          Resource: 
            - "arn:aws:dynamodb:us-east-2:891377055217:table/${self:custom.tableName}"
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  getProducts:
    handler: src/controllers/productsController.getProducts
    events:
      - httpApi:
          path: /products
          method: GET

resources:
  Resources:
    ProductsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
